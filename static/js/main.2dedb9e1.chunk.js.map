{"version":3,"sources":["components/buttons.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["buttons","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleRemainder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dedb9e1.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst buttons = ({color, text, onClick}) => {\r\n    return  <button \r\n    onClick={onClick}\r\n    style={{backgroundColor: color}} \r\n    className='btn'>\r\n        {text}\r\n        </button>\r\n}\r\n\r\nbuttons.defaultProps = {\r\n    color:'steelblue',\r\n}\r\n\r\nbuttons.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default buttons\r\n","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './buttons' \r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n   \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && (<Button color={showAdd ? 'red' : 'green'}\r\n               text={showAdd ? 'Close' : 'Add'} onClick={onAdd}\r\n              />\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copywright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer \r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`event ${task.reminder ? \r\n            'reminder' : ''}`} \r\n        onDoubleClick={() => onToggle(task.id)}> \r\n            <h3>\r\n                {task.text} {''}\r\n                <FaTimes style={{ color: 'red', cursor: 'pointer' }} \r\n            onClick={() => onDelete(task.id)} /> </h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n        {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n        ))}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        } \r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            \r\n            <input type='submit' value='save task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  // fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // add tasks\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    //   const id = Math.floor(Math.random() * 10000) + 1\n\n    //   const newTask = {id, ...task }\n    //   setTasks([...tasks, newTask])\n    //\n  };\n\n  // delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // toggle remainder\n  const toggleRemainder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleRemainder}\n                />\n              ) : (\n                \"No tasks to show\"\n              )}\n            </>\n          )}\n        />\n\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}